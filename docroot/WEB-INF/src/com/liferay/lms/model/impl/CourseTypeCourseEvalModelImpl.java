/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.lms.model.impl;

import com.liferay.lms.model.CourseTypeCourseEval;
import com.liferay.lms.model.CourseTypeCourseEvalModel;
import com.liferay.lms.model.CourseTypeCourseEvalSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CourseTypeCourseEval service. Represents a row in the &quot;Lms_CourseTypeCourseEval&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.lms.model.CourseTypeCourseEvalModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CourseTypeCourseEvalImpl}.
 * </p>
 *
 * @author TLS
 * @see CourseTypeCourseEvalImpl
 * @see com.liferay.lms.model.CourseTypeCourseEval
 * @see com.liferay.lms.model.CourseTypeCourseEvalModel
 * @generated
 */
public class CourseTypeCourseEvalModelImpl extends BaseModelImpl<CourseTypeCourseEval>
	implements CourseTypeCourseEvalModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a course type course eval model instance should use the {@link com.liferay.lms.model.CourseTypeCourseEval} interface instead.
	 */
	public static final String TABLE_NAME = "Lms_CourseTypeCourseEval";
	public static final Object[][] TABLE_COLUMNS = {
			{ "courseTypeEvalutationTypeId", Types.BIGINT },
			{ "courseTypeId", Types.BIGINT },
			{ "courseEvalId", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Lms_CourseTypeCourseEval (courseTypeEvalutationTypeId LONG not null primary key,courseTypeId LONG,courseEvalId VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table Lms_CourseTypeCourseEval";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.lms.model.CourseTypeCourseEval"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.lms.model.CourseTypeCourseEval"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.lms.model.CourseTypeCourseEval"),
			true);
	public static long COURSETYPEEVALUTATIONTYPEID_COLUMN_BITMASK = 1L;
	public static long COURSETYPEID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CourseTypeCourseEval toModel(
		CourseTypeCourseEvalSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CourseTypeCourseEval model = new CourseTypeCourseEvalImpl();

		model.setCourseTypeEvalutationTypeId(soapModel.getCourseTypeEvalutationTypeId());
		model.setCourseTypeId(soapModel.getCourseTypeId());
		model.setCourseEvalId(soapModel.getCourseEvalId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CourseTypeCourseEval> toModels(
		CourseTypeCourseEvalSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CourseTypeCourseEval> models = new ArrayList<CourseTypeCourseEval>(soapModels.length);

		for (CourseTypeCourseEvalSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.lms.model.CourseTypeCourseEval"));

	public CourseTypeCourseEvalModelImpl() {
	}

	public long getPrimaryKey() {
		return _courseTypeEvalutationTypeId;
	}

	public void setPrimaryKey(long primaryKey) {
		setCourseTypeEvalutationTypeId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_courseTypeEvalutationTypeId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return CourseTypeCourseEval.class;
	}

	public String getModelClassName() {
		return CourseTypeCourseEval.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("courseTypeEvalutationTypeId",
			getCourseTypeEvalutationTypeId());
		attributes.put("courseTypeId", getCourseTypeId());
		attributes.put("courseEvalId", getCourseEvalId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long courseTypeEvalutationTypeId = (Long)attributes.get(
				"courseTypeEvalutationTypeId");

		if (courseTypeEvalutationTypeId != null) {
			setCourseTypeEvalutationTypeId(courseTypeEvalutationTypeId);
		}

		Long courseTypeId = (Long)attributes.get("courseTypeId");

		if (courseTypeId != null) {
			setCourseTypeId(courseTypeId);
		}

		String courseEvalId = (String)attributes.get("courseEvalId");

		if (courseEvalId != null) {
			setCourseEvalId(courseEvalId);
		}
	}

	public long getCourseTypeEvalutationTypeId() {
		return _courseTypeEvalutationTypeId;
	}

	public void setCourseTypeEvalutationTypeId(long courseTypeEvalutationTypeId) {
		_columnBitmask |= COURSETYPEEVALUTATIONTYPEID_COLUMN_BITMASK;

		if (!_setOriginalCourseTypeEvalutationTypeId) {
			_setOriginalCourseTypeEvalutationTypeId = true;

			_originalCourseTypeEvalutationTypeId = _courseTypeEvalutationTypeId;
		}

		_courseTypeEvalutationTypeId = courseTypeEvalutationTypeId;
	}

	public long getOriginalCourseTypeEvalutationTypeId() {
		return _originalCourseTypeEvalutationTypeId;
	}

	public long getCourseTypeId() {
		return _courseTypeId;
	}

	public void setCourseTypeId(long courseTypeId) {
		_columnBitmask |= COURSETYPEID_COLUMN_BITMASK;

		if (!_setOriginalCourseTypeId) {
			_setOriginalCourseTypeId = true;

			_originalCourseTypeId = _courseTypeId;
		}

		_courseTypeId = courseTypeId;
	}

	public long getOriginalCourseTypeId() {
		return _originalCourseTypeId;
	}

	public String getCourseEvalId() {
		if (_courseEvalId == null) {
			return StringPool.BLANK;
		}
		else {
			return _courseEvalId;
		}
	}

	public void setCourseEvalId(String courseEvalId) {
		_courseEvalId = courseEvalId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			CourseTypeCourseEval.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CourseTypeCourseEval toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (CourseTypeCourseEval)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		CourseTypeCourseEvalImpl courseTypeCourseEvalImpl = new CourseTypeCourseEvalImpl();

		courseTypeCourseEvalImpl.setCourseTypeEvalutationTypeId(getCourseTypeEvalutationTypeId());
		courseTypeCourseEvalImpl.setCourseTypeId(getCourseTypeId());
		courseTypeCourseEvalImpl.setCourseEvalId(getCourseEvalId());

		courseTypeCourseEvalImpl.resetOriginalValues();

		return courseTypeCourseEvalImpl;
	}

	public int compareTo(CourseTypeCourseEval courseTypeCourseEval) {
		long primaryKey = courseTypeCourseEval.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		CourseTypeCourseEval courseTypeCourseEval = null;

		try {
			courseTypeCourseEval = (CourseTypeCourseEval)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = courseTypeCourseEval.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CourseTypeCourseEvalModelImpl courseTypeCourseEvalModelImpl = this;

		courseTypeCourseEvalModelImpl._originalCourseTypeEvalutationTypeId = courseTypeCourseEvalModelImpl._courseTypeEvalutationTypeId;

		courseTypeCourseEvalModelImpl._setOriginalCourseTypeEvalutationTypeId = false;

		courseTypeCourseEvalModelImpl._originalCourseTypeId = courseTypeCourseEvalModelImpl._courseTypeId;

		courseTypeCourseEvalModelImpl._setOriginalCourseTypeId = false;

		courseTypeCourseEvalModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CourseTypeCourseEval> toCacheModel() {
		CourseTypeCourseEvalCacheModel courseTypeCourseEvalCacheModel = new CourseTypeCourseEvalCacheModel();

		courseTypeCourseEvalCacheModel.courseTypeEvalutationTypeId = getCourseTypeEvalutationTypeId();

		courseTypeCourseEvalCacheModel.courseTypeId = getCourseTypeId();

		courseTypeCourseEvalCacheModel.courseEvalId = getCourseEvalId();

		String courseEvalId = courseTypeCourseEvalCacheModel.courseEvalId;

		if ((courseEvalId != null) && (courseEvalId.length() == 0)) {
			courseTypeCourseEvalCacheModel.courseEvalId = null;
		}

		return courseTypeCourseEvalCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{courseTypeEvalutationTypeId=");
		sb.append(getCourseTypeEvalutationTypeId());
		sb.append(", courseTypeId=");
		sb.append(getCourseTypeId());
		sb.append(", courseEvalId=");
		sb.append(getCourseEvalId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.liferay.lms.model.CourseTypeCourseEval");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>courseTypeEvalutationTypeId</column-name><column-value><![CDATA[");
		sb.append(getCourseTypeEvalutationTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>courseTypeId</column-name><column-value><![CDATA[");
		sb.append(getCourseTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>courseEvalId</column-name><column-value><![CDATA[");
		sb.append(getCourseEvalId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CourseTypeCourseEval.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			CourseTypeCourseEval.class
		};
	private long _courseTypeEvalutationTypeId;
	private long _originalCourseTypeEvalutationTypeId;
	private boolean _setOriginalCourseTypeEvalutationTypeId;
	private long _courseTypeId;
	private long _originalCourseTypeId;
	private boolean _setOriginalCourseTypeId;
	private String _courseEvalId;
	private long _columnBitmask;
	private CourseTypeCourseEval _escapedModelProxy;
}